apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-app
  labels:
    app: netbox-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netbox-app
  template:
    metadata:
      labels:
        app: netbox-app
    spec:
      containers:
      - name: netbox
        image: netboxcommunity/netbox:v2.8.5
        resources:
          limits:
            cpu: 1000m
            memory: 300Mi
        ports:
        - containerPort: 8001
        env:
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: ALLOWED_HOSTS
              name: netbox-app-env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: netbox-app-env
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: netbox-app-env
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: netbox-app-env
        - name: EMAIL_FROM
          valueFrom:
            configMapKeyRef:
              key: EMAIL_FROM
              name: netbox-app-env
        - name: EMAIL_PORT
          valueFrom:
            configMapKeyRef:
              key: EMAIL_PORT
              name: netbox-app-env
        - name: EMAIL_SERVER
          valueFrom:
            configMapKeyRef:
              key: EMAIL_SERVER
              name: netbox-app-env
        - name: EMAIL_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: EMAIL_TIMEOUT
              name: netbox-app-env
        - name: EMAIL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: EMAIL_USERNAME
              name: netbox-app-env
        - name: NETBOX_USERNAME
          valueFrom:
            configMapKeyRef:
              key: NETBOX_USERNAME
              name: netbox-app-env
        - name: LOGIN_REQUIRED
          valueFrom:
            configMapKeyRef:
              key: LOGIN_REQUIRED
              name: netbox-app-env
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: netbox-app-env
        - name: REDIS_CACHE_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_HOST
              name: netbox-app-env
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_PORT
              name: netbox-app-env
        - name: REDIS_CACHE_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_PORT
              name: netbox-app-env
        volumeMounts:
        - name: netbox-db-password
          mountPath: /run/secrets/db_password
          subPath: DB_PASSWORD
          readOnly: true
        - name: netbox-email-password
          mountPath: /run/secrets/email_password
          subPath: EMAIL_PASSWORD
          readOnly: true
        - name: netbox-secret-key
          mountPath: /run/secrets/secret_key
          subPath: SECRET_KEY
          readOnly: true
        - name: netbox-superuser-password
          mountPath: /run/secrets/superuser_password
          subPath: SUPERUSER_PASSWORD
          readOnly: true
        - name: netbox-static-files
          mountPath: /opt/netbox/netbox/static  
      
      # nginx container
      - name: nginx
        image: nginx:1.17.3-alpine
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - name: netbox-static-files
            mountPath: /opt/netbox/netbox/static
          - name: netbox-nginx-config
            subPath: nginx.conf
            mountPath: /etc/nginx/nginx.conf

      restartPolicy: Always
      volumes:
      # passwords
      - name: netbox-db-password
        configMap:
          name: netbox-app-env
          items:
            - key: DB_PASSWORD
              path: DB_PASSWORD
      - name: netbox-email-password
        configMap:
          name: netbox-app-env
          items:
            - key: EMAIL_PASSWORD
              path: EMAIL_PASSWORD
      - name: netbox-secret-key
        configMap:
          name: netbox-app-env
          items:
            - key: SECRET_KEY
              path: SECRET_KEY
      - name: netbox-superuser-password
        configMap:
          name: netbox-app-env
          items:
            - key: SUPERUSER_PASSWORD
              path: SUPERUSER_PASSWORD
      # nginx
      - name: netbox-static-files
        emptyDir: {}
      - name: netbox-nginx-config
        configMap:
          name: netbox-app-env
          items:
            - key: nginx.conf
              path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: netbox
  labels:
    app: netbox
spec:
  ports:
  - name: nbox
    port: 8001
    targetPort: 8001
  selector:
    app: netbox

      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: netbox-static-files-pv-claim
  labels:
    app: netbox
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: netbox-static-files-pv
  labels:
    type: local
    app: netbox
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data/k8s/netbox-static-files"