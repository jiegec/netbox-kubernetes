apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    backend: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      backend: postgres
  template:
    metadata:
      labels:
        backend: postgres
    spec:
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:  
      - image: postgres:9.6-alpine
        name: postgres 
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdb
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: netbox-postgres-env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: netbox-postgres-env      
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: netbox-postgres-env
          
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    backend: postgres
spec:
  clusterIP: None
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  selector:
    backend: postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  labels:
    app: netbox
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    type: local
    app: netbox
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/k8s/netbox-postgres-db"

