apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    frontend: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      frontend: nginx
  template:
    metadata:
      labels:
        frontend: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.12-alpine
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        command: ["nginx"]
        args: ["-c", "/etc/netbox-nginx/nginx.conf","-g", "daemon off;"] 
        volumeMounts:
        - name: netbox-static-files
          mountPath: /opt/netbox/netbox/static
        - name: netbox-nginx-config
          mountPath: /etc/netbox-nginx 
      restartPolicy: Always
      volumes:
      - name: netbox-static-files
        persistentVolumeClaim:
          claimName: netbox-static-files-pv-claim
      - name: netbox-nginx-config
        configMap:
          name: nginx-conf
       
---
apiVersion: v1
kind: ConfigMap
metadata: 
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    events {
      worker_connections  1024;
    }
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      tcp_nopush     on;
      keepalive_timeout  65;
      gzip  on;
      server_tokens off;
      server {
          listen 80;
          server_name localhost;
          access_log off;
          location /static/ {
            alias /opt/netbox/netbox/static/;
          }

          location / {
            proxy_pass http://netbox:8001;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    }

