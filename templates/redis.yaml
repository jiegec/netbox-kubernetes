apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: {{ .Release.Name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-redis
    spec:
      volumes:
        - name: redis
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-redis-pv-claim
      containers:  
      - image: {{ .Values.redis.image }}
        name: redis 
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /data
            name: redis
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: {{ .Release.Name }}-redis
spec:
  ports:
  - name: {{ .Release.Name }}-redis
    port: 6379
    targetPort: 6379
  selector:
    app: {{ .Release.Name }}-redis

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-redis-pv-claim
spec:
{{- if .Values.redis.persistentVolume.storageClass }}
{{- if (eq "-" .Values.redis.persistentVolume.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.redis.persistentVolume.storageClass }}"
{{- end }}
{{- end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
